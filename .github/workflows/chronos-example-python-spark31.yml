name: Chronos Example Python Spark3.1 py38 py39

# Cancel previous runs in the PR when you push new commits
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

# Controls when the action will run. 
on:
  # Triggers the workflow on merge events for nano/orca change
  push:
    branches: [ main ]
    paths:
      - 'python/nano/src/**'
      - 'python/orca/src/bigdl/orca/automl/**'
      - 'python/orca/src/bigdl/orca/data/**'
  # Triggers the workflow on pull request events for chronos change
  pull_request:
    branches: [ main ]
    paths:
      - 'python/chronos/src/**'
      - 'python/chronos/example/**'
      - '.github/workflows/chronos-example-python-spark31.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  Chronos-example:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos example
        shell: bash
        run: |
          conda remove -n chronos-prvn-env -y --all
          conda create -n chronos-prvn-env -y python=${{matrix.python-version}} setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-prvn-env
          apt-get update
          apt-get install -y libgl1
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          sed -i "s/pyspark==2.4.6/pyspark==3.4.1/g" python/dllib/src/setup.py
          wget https://raw.githubusercontent.com/analytics-zoo/gha-cicd-env/main/python-requirements/requirements-chronos-python-ut.txt -O ${{ github.workspace }}/requirements-chronos-python-ut.txt
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} -r ${{ github.workspace }}/requirements-chronos-python-ut.txt
          bash python/dev/release_default_linux_spark3.sh default false false
          bash python/nano/dev/build_and_install.sh linux default false pytorch --force-reinstall --no-deps -U
          whl_name=`ls python/nano/dist/`
          pip install -i https://pypi.python.org/simple python/nano/dist/${whl_name}[pytorch,inference]
          pip install -i https://pypi.python.org/simple intel-tensorflow==2.7.0 tf2onnx==1.13.0 tensorflow==2.7.0
          pip install -i https://pypi.python.org/simple python/dllib/src/dist/bigdl_dllib_*-py3-none-manylinux1_x86_64.whl
          pip install -i https://pypi.python.org/simple python/orca/src/dist/bigdl_orca_*-py3-none-manylinux1_x86_64.whl
          pip install -i https://pypi.python.org/simple python/chronos/src/dist/bigdl_chronos_*-py3-none-manylinux1_x86_64.whl
          pip install -i https://pypi.python.org/simple jupyter cmake==3.16.3
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          HOROVOD_WITH_PYTORCH=1; HOROVOD_WITH_GLOO=1; pip install --no-cache-dir horovod==0.24.2
          bash python/chronos/dev/example/run-example-tests.sh
          source deactivate
          conda remove -n chronos-prvn-env -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Remove Chronos Env
        if: ${{ always() }}
        shell: bash
        run: |
          conda remove -n chronos-prvn-env -y --all
