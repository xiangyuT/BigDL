name: Nano Unit Tests Tensorflow

# Cancel previous runs in the PR when you push new commits
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'python/nano/**'
      - '.github/workflows/nano_unit_tests_tensorflow.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'python/nano/**'
      - '.github/workflows/nano_unit_tests_tensorflow.yml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  nano-unit-test-tensorflow:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.7"]
        tf-version: [
          "intel-tensorflow==2.8.0 keras==2.8.0 tensorflow-estimator==2.8.0",
          "intel-tensorflow==2.9.1 keras==2.9.0 tensorflow-estimator==2.9.0",
          ""
          ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools==58.0.4
          python -m pip install --upgrade wheel
          sudo apt-get install openmpi-bin openmpi-doc libopenmpi-dev

      - name: Run TensorFlow unit tests
        shell: bash
        run: |
          $CONDA/bin/conda create -n nano-tensorflow -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate nano-tensorflow
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          pip install pytest
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n nano-tensorflow --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run TensorFlow unit tests (Horovod)
        shell: bash
        run: |
          $CONDA/bin/conda create -n horovod-tf -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate horovod-tf
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          HOROVOD_WITH_MPI=1 HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITHOUT_PYTORCH=1 pip install --no-cache-dir horovod==0.25.0
          pip install pytest
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-horovod-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n horovod-tf --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run TensorFlow unit tests (Ray)
        shell: bash
        run: |
          $CONDA/bin/conda create -n ray-tf -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate ray-tf
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          pip install pytest
          # fix issue, see https://github.com/intel-analytics/BigDL/blob/main/docs/readthedocs/source/doc/Nano/Overview/known_issues.md#ray-issues
          pip install google-api-core==2.8.2
          pip install ray[default]==1.11.0 prometheus_client==0.13.0
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-ray-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n ray-tf --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run TensorFlow unit tests (Automl)
        shell: bash
        run: |
          $CONDA/bin/conda create -n nano-automl-tf -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate nano-automl-tf
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          pip install pytest
          pip install ConfigSpace
          pip install optuna
          source bigdl-nano-init
          bash python/nano/test/run-nano-automl-common-tests.sh
          bash python/nano/test/run-nano-automl-tf-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n nano-automl-tf --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run TensorFlow unit tests (INC)
        shell: bash
        run: |
          $CONDA/bin/conda create -n inc-tf -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate inc-tf
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          pip install pytest
          pip install neural-compressor==1.11
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-inc-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n inc-tf --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run tensorflow unit tests (OpenVINO)
        shell: bash
        run: |
          $CONDA/bin/conda create -n openvino-tensorflow -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate openvino-tensorflow
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow
          if [ ! -z "${{matrix.tf-version}}" ]; then
            pip install ${{matrix.tf-version}}
          fi
          pip install pytest
          pip install openvino-dev
          pip install numpy==1.21.6
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-openvino-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n openvino-tensorflow --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
      
      - name: Run tensorflow unit tests (ONNX)
        shell: bash
        run: |
          $CONDA/bin/conda create -n onnx-tensorflow -y python==3.7.10 setuptools=58.0.4
          source $CONDA/bin/activate onnx-tensorflow
          $CONDA/bin/conda info
          bash python/nano/dev/build_and_install.sh linux default false tensorflow,inference
          if [ ! -z "${{matrix.tf-version}}" ]; then
            pip install ${{matrix.tf-version}}
          fi
          pip install pytest
          source bigdl-nano-init
          bash python/nano/test/run-nano-tf-onnx-tests.sh
          source $CONDA/bin/deactivate
          $CONDA/bin/conda remove -n onnx-tensorflow --all
        env:
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
